package com.example.tsob.tflite_bug_test;

import android.content.res.AssetFileDescriptor;
import android.content.res.AssetManager;
import android.util.Log;

import static org.hamcrest.Matchers.greaterThan;
import static org.junit.Assert.assertThat;

import org.tensorflow.lite.Interpreter;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import java.nio.MappedByteBuffer;
import java.nio.channels.FileChannel;

import android.content.Context;
import android.support.test.InstrumentationRegistry;
import android.support.test.runner.AndroidJUnit4;

import org.junit.Test;
import org.junit.runner.RunWith;

import static android.support.test.InstrumentationRegistry.getContext;
import static android.support.test.InstrumentationRegistry.getTargetContext;
import static org.junit.Assert.*;

/**
 * Instrumented test, which will execute on an Android device.
 *
 * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
 */
@RunWith(AndroidJUnit4.class)
public class ExampleInstrumentedTest {

    private Interpreter tflite;

    private float[][] scoreOutput = {{0.f}};

    private static final float[][][] peaks = {{
            {57.0280342102f, 50.0862884521f, 36.8845481873f},
            {27.6061878204f, 40.9051246643f, 53.7671737671f},
            {80.4856872559f, 69.4464950562f, 96.9984054565f},
            {29.547410965f, 44.1288604736f, 69.3706512451f},
            {94.3615341187f, 2.04078006744f, 59.3006324768f},
            {3.85551834106f, 11.4069757462f, 3.94917654991f},
            {79.5253677368f, 50.1930732727f, 12.5063171387f},
            {96.0991439819f, 25.3678760529f, 4.11727380753f},
            {21.9021835327f, 72.6685180664f, 11.5872211456f},
            {81.8434829712f, 63.0354309082f, 14.6631345749f},
            {2.83315777779f, 71.3386306763f, 83.7315444946f},
            {84.8123321533f, 25.0845603943f, 30.1804275513f},
            {9.17214488983f, 14.10115242f, 70.907043457f},
            {61.5627098083f, 13.921664238f, 97.8299179077f},
            {94.0296173096f, 30.5025920868f, 12.0827579498f},
            {65.7264862061f, 75.0598907471f, 83.0198669434f},
            {24.4035511017f, 29.4841213226f, 29.8947181702f},
            {34.9029121399f, 91.3947982788f, 15.8951797485f},
            {30.4521560669f, 95.3856887817f, 24.2989349365f},
            {12.4237518311f, 89.4852142334f, 15.5577363968f},
            {24.943769455f, 7.79316234589f, 76.2138900757f},
            {75.8030853271f, 52.4425544739f, 40.1811943054f},
            {61.01927948f, 54.1741027832f, 25.987077713f},
            {14.9223737717f, 43.7634315491f, 24.101360321f},
            {55.5095291138f, 85.9446868896f, 1.53917467594f},
            {75.759147644f, 39.0636405945f, 85.5835266113f},
            {93.5738220215f, 90.7177200317f, 10.2245311737f},
            {38.1756057739f, 0.677058279514f, 65.1962356567f},
            {64.7265090942f, 54.4259529114f, 70.8792190552f},
            {41.572265625f, 37.4589767456f, 87.9058456421f},
            {47.2756462097f, 1.70629823208f, 75.7523193359f},
            {56.8191566467f, 73.4745559692f, 24.1057910919f},
            {2.32424998283f, 1.0791336298f, 12.2308855057f},
            {85.6214447021f, 58.5039710999f, 89.7287216187f},
            {59.0790634155f, 30.8970737457f, 7.85583400726f},
            {76.9812011719f, 3.04733729362f, 1.21843445301f},
            {37.1630401611f, 30.5205764771f, 90.9437713623f},
            {77.1665344238f, 17.3251934052f, 71.9500961304f},
            {23.0779533386f, 60.9043083191f, 77.2257385254f},
            {1.86073029041f, 97.1028060913f, 19.6917819977f},
            {94.6205291748f, 98.085609436f, 20.4720993042f},
            {92.6821517944f, 44.567111969f, 97.7585525513f},
            {54.4085235596f, 44.8168716431f, 66.6551742554f},
            {37.3285446167f, 59.5004234314f, 31.5954837799f},
            {12.8511924744f, 80.5212173462f, 87.6489028931f},
            {28.0931758881f, 31.7897663116f, 74.4602279663f},
            {19.0018806458f, 79.782119751f, 11.4447031021f},
            {50.9435272217f, 42.5501251221f, 44.9910697937f},
            {15.3077735901f, 21.9325237274f, 36.8029289246f},
            {75.1783447266f, 68.6024780273f, 97.8220748901f},
            {5.23155546188f, 74.3434295654f, 47.7831687927f},
            {36.156993866f, 21.9297733307f, 92.69556427f},
            {1.3012624979f, 43.6288146973f, 64.5303115845f},
            {19.555475235f, 29.3682327271f, 69.6334838867f},
            {53.8960533142f, 96.3494796753f, 74.6588134766f},
            {59.3243560791f, 15.1360263824f, 75.1265792847f},
            {66.2497024536f, 48.9081764221f, 66.2282485962f},
            {20.5189762115f, 63.4479484558f, 25.0752811432f},
            {54.2794303894f, 62.5479774475f, 82.3689117432f},
            {27.5652675629f, 79.8009796143f, 33.1493682861f},
            {35.5846862793f, 83.4485092163f, 44.743396759f},
            {72.3684005737f, 32.835269928f, 0.465490043163f},
            {83.7188186646f, 10.3130779266f, 49.0547103882f},
            {80.1358566284f, 71.0460662842f, 12.8505268097f},
            {42.0131759644f, 2.83075356483f, 73.793762207f},
            {74.9613647461f, 11.6675357819f, 71.9258575439f},
            {79.2838439941f, 27.127368927f, 52.3880271912f},
            {47.6468925476f, 2.2902340889f, 42.5273742676f},
            {3.87953710556f, 53.5069274902f, 38.8864555359f},
            {59.8734397888f, 21.5652198792f, 22.6808128357f},
            {22.8364200592f, 50.9017829895f, 1.36397624016f},
            {90.7757110596f, 11.0849199295f, 22.2641296387f},
            {28.626657486f, 58.5957717896f, 77.2662887573f},
            {58.0681419373f, 74.2486343384f, 6.52904129028f},
            {77.8414611816f, 39.2196807861f, 57.6724014282f},
            {23.3719177246f, 68.4016342163f, 57.0524940491f},
            {37.2664031982f, 40.1457862854f, 14.5420293808f},
            {20.2544364929f, 65.0362930298f, 94.0516738892f},
            {6.00408792496f, 56.2474937439f, 87.1296234131f},
            {75.5696868896f, 37.6111221313f, 85.5049209595f},
            {93.4396972656f, 22.2630672455f, 31.5016288757f},
            {72.6017913818f, 25.5336856842f, 11.4829082489f},
            {86.2436523438f, 16.1195545197f, 25.3864307404f},
            {6.22407197952f, 58.9247093201f, 72.8210601807f},
            {17.9469909668f, 40.5381507874f, 42.8006286621f},
            {90.0720062256f, 61.6012802124f, 87.8401870728f},
            {97.6963882446f, 48.0202674866f, 80.6378479004f},
            {38.8943061829f, 32.1468734741f, 68.2064819336f},
            {48.4283332825f, 40.7034988403f, 99.3281097412f},
            {95.1403045654f, 71.6737518311f, 86.0658798218f},
            {96.1628494263f, 69.657409668f, 71.5533065796f},
            {53.7838745117f, 79.7169036865f, 98.3759155273f},
            {77.223777771f, 54.4829788208f, 4.33288764954f},
            {2.83456492424f, 53.9237861633f, 28.5289859772f},
            {44.2738838196f, 30.079000473f, 61.7285079956f},
            {71.84740448f, 80.8995437622f, 72.8048095703f},
            {70.9875030518f, 93.4999542236f, 45.6492919922f},
            {45.370677948f, 51.917678833f, 74.06199646f},
            {44.3528785706f, 51.0282058716f, 80.2621459961f},
            {28.0962257385f, 26.6753177643f, 83.4666213989f},
            {12.4058866501f, 29.6542873383f, 53.2503128052f},
            {36.9015426636f, 80.757850647f, 97.6661224365f},
            {22.8065776825f, 71.2039718628f, 96.640586853f},
            {11.9773130417f, 54.0788803101f, 56.515007019f},
            {75.3904495239f, 36.6791229248f, 96.3770217896f},
            {27.3147621155f, 68.9786453247f, 92.337562561f},
            {49.7334785461f, 25.0592079163f, 15.3414821625f},
            {59.5328483582f, 64.1513366699f, 48.6597442627f},
            {78.091583252f, 12.5472688675f, 79.7357788086f},
            {99.0843276978f, 53.754070282f, 46.0659980774f},
            {54.4534988403f, 28.0409431458f, 7.14134740829f},
            {9.50308132172f, 47.6920509338f, 18.1738071442f},
            {74.6213607788f, 20.3364048004f, 50.6642990112f},
            {8.73325157166f, 8.3656206131f, 33.0092506409f},
            {59.6027183533f, 71.6017913818f, 3.26031374931f},
            {90.8123016357f, 18.517999649f, 80.1541442871f},
            {18.1176605225f, 19.366104126f, 27.5356063843f},
            {62.8654823303f, 97.6538162231f, 17.8860397339f},
            {77.9353256226f, 15.7191667557f, 15.2532892227f},
            {82.0434417725f, 29.5035896301f, 81.6486358643f},
            {56.7638244629f, 7.0255947113f, 46.0505409241f},
            {99.7141113281f, 80.2061538696f, 80.5537796021f},
            {75.666053772f, 18.6886425018f, 96.0140686035f},
            {30.9704360962f, 22.6826343536f, 16.2509632111f},
            {38.657989502f, 75.085067749f, 54.5688018799f},
            {6.13258075714f, 63.9675178528f, 3.5744330883f},
            {87.1639099121f, 43.3550720215f, 16.5231456757f},
            {1.81802463531f, 35.8881187439f, 56.4733886719f},
            {73.4296188354f, 75.3182830811f, 24.4594497681f},
            {22.9551620483f, 7.59884595871f, 37.6615791321f},
            {39.6876564026f, 65.3436355591f, 45.4051818848f},
            {43.6156082153f, 49.2724838257f, 62.4709281921f},
            {40.5449790955f, 54.6014289856f, 42.7210235596f},
            {20.9157733917f, 0.785964906216f, 92.5229873657f},
            {65.9423751831f, 12.3080234528f, 19.1041183472f},
            {52.4267463684f, 61.1675453186f, 9.3080701828f},
            {89.9571075439f, 64.0159988403f, 20.8261451721f},
            {47.1580200195f, 80.9996643066f, 0.440193235874f},
            {16.5094223022f, 65.7943496704f, 63.0554466248f},
            {5.06510210037f, 28.5434551239f, 50.9489440918f},
            {17.4220733643f, 24.8651123047f, 22.2706489563f},
            {23.8195972443f, 26.6097488403f, 75.5541992188f},
            {22.4764385223f, 85.2128143311f, 29.6993961334f},
            {76.8632202148f, 64.0660705566f, 77.0938796997f},
            {3.36626553535f, 81.2398376465f, 46.0686531067f},
            {49.0860862732f, 67.0643692017f, 17.1634426117f},
            {11.8511075974f, 92.0881729126f, 69.7468643188f},
            {37.3425445557f, 90.6796112061f, 33.5576019287f},
            {54.0108261108f, 4.28000259399f, 60.8464546204f},
            {73.8075714111f, 55.0096588135f, 32.7836036682f},
    }};

    private MappedByteBuffer loadModelFile(
            AssetManager assetManager, String modelPath) throws IOException {
        AssetFileDescriptor fileDescriptor = assetManager.openFd(modelPath);
        FileInputStream inputStream = new FileInputStream(
                fileDescriptor.getFileDescriptor());
        FileChannel fileChannel = inputStream.getChannel();
        long startOffset = fileDescriptor.getStartOffset();
        long declaredLength = fileDescriptor.getDeclaredLength();
        return fileChannel.map(
                FileChannel.MapMode.READ_ONLY,
                startOffset,
                declaredLength);
    }

    @Test
    public void useAppContext() throws Exception {
        MappedByteBuffer model = loadModelFile(getContext().getAssets(), "testmodel.tflite");
        tflite = new Interpreter(model);

        // TODO: why does this not work on an NNAPI-supported device?
        tflite.setUseNNAPI(true);

        for (int i = 0; i < 1000; ++i) {
            scoreOutput[0][0] = 0.f;
            tflite.run(peaks, scoreOutput);
            Log.i("TFLite Result", "Value: " + scoreOutput[0][0]);

            assertThat(scoreOutput[0][0], greaterThan(-1.0f));
        }

    }
}
